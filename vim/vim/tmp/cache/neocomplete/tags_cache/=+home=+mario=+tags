[{'word': 'ActiveSupport', 'menu': '', 'kind': 'c', 'abbr': 'ActiveSupport::TestCase <class>'}, {'word': 'Animation', 'menu': '', 'kind': 'c', 'abbr': 'Animation <class>'}, {'word': 'Animator', 'menu': '', 'kind': 'c', 'abbr': 'Animator <class>'}, {'word': 'Application', 'menu': 'Blog', 'kind': 'c', 'abbr': 'Application < Rails::Application <class>'}, {'word': 'ApplicationController', 'menu': '', 'kind': 'c', 'abbr': 'ApplicationController < ActionController::Base <class>'}, {'word': 'ApplicationHelper', 'menu': '', 'kind': 'm', 'abbr': 'module ApplicationHelper'}, {'word': 'Args', 'menu': 'Gemfiler', 'kind': 'c', 'abbr': 'Args <class>'}, {'word': 'Article', 'menu': '', 'kind': 'c', 'abbr': 'Article < ActiveRecord::Base <class>'}, {'word': 'ArticleTest', 'menu': '', 'kind': 'c', 'abbr': 'ArticleTest < ActiveSupport::TestCase <class>'}, {'word': 'ArticlesController', 'menu': '', 'kind': 'c', 'abbr': 'ArticlesController < ApplicationController <class>'}, {'word': 'ArticlesControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'ArticlesControllerTest < ActionController::TestCase <class>'}, {'word': 'ArticlesHelper', 'menu': '', 'kind': 'm', 'abbr': 'module ArticlesHelper'}, {'word': 'AsciiPicture', 'menu': '', 'kind': 'c', 'abbr': 'AsciiPicture <class>'}, {'word': 'AwesomeDigger', 'menu': 'Diggers', 'kind': 'c', 'abbr': 'AwesomeDigger <class>'}, {'word': 'Blog', 'menu': '', 'kind': 'm', 'abbr': 'module Blog'}, {'word': 'Board', 'menu': 'Life', 'kind': 'c', 'abbr': 'Board <class>'}, {'word': 'Client', 'menu': '', 'kind': 'c', 'abbr': 'Client < ActiveRecord::Base <class>'}, {'word': 'ClientTest', 'menu': '', 'kind': 'c', 'abbr': 'ClientTest < ActiveSupport::TestCase <class>'}, {'word': 'ClientsController', 'menu': '', 'kind': 'c', 'abbr': 'ClientsController < ApplicationController <class>'}, {'word': 'ClientsControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'ClientsControllerTest < ActionController::TestCase <class>'}, {'word': 'ClientsHelper', 'menu': '', 'kind': 'm', 'abbr': 'module ClientsHelper'}, {'word': 'Comment', 'menu': '', 'kind': 'c', 'abbr': 'Comment < ActiveRecord::Base <class>'}, {'word': 'CommentTest', 'menu': '', 'kind': 'c', 'abbr': 'CommentTest < ActiveSupport::TestCase <class>'}, {'word': 'CommentsController', 'menu': '', 'kind': 'c', 'abbr': 'CommentsController < ApplicationController <class>'}, {'word': 'CommentsControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'CommentsControllerTest < ActionController::TestCase <class>'}, {'word': 'CommentsHelper', 'menu': '', 'kind': 'm', 'abbr': 'module CommentsHelper'}, {'word': 'Condition', 'menu': '', 'kind': 'c', 'abbr': 'Condition <class>'}, {'word': 'CreateArticles', 'menu': '', 'kind': 'c', 'abbr': 'CreateArticles < ActiveRecord::Migration <class>'}, {'word': 'CreateClients', 'menu': '', 'kind': 'c', 'abbr': 'CreateClients < ActiveRecord::Migration <class>'}, {'word': 'CreateComments', 'menu': '', 'kind': 'c', 'abbr': 'CreateComments < ActiveRecord::Migration <class>'}, {'word': 'CreateFunctions', 'menu': '', 'kind': 'c', 'abbr': 'CreateFunctions < ActiveRecord::Migration <class>'}, {'word': 'CreateProducts', 'menu': '', 'kind': 'c', 'abbr': 'CreateProducts < ActiveRecord::Migration <class>'}, {'word': 'CreateQuestions', 'menu': '', 'kind': 'c', 'abbr': 'CreateQuestions < ActiveRecord::Migration <class>'}, {'word': 'Diggers', 'menu': '', 'kind': 'm', 'abbr': 'module Diggers'}, {'word': 'Factory', 'menu': '', 'kind': 'm', 'abbr': 'module Factory'}, {'word': 'FetchError', 'menu': 'Gemfiler', 'kind': 'c', 'abbr': 'FetchError < StandardError; end <class>'}, {'word': 'Fetcher', 'menu': '', 'kind': 'c', 'abbr': 'Fetcher <class>'}, {'word': 'FifthController', 'menu': '', 'kind': 'c', 'abbr': 'FifthController < ApplicationController <class>'}, {'word': 'FifthControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'FifthControllerTest < ActionController::TestCase <class>'}, {'word': 'FifthHelper', 'menu': '', 'kind': 'm', 'abbr': 'module FifthHelper'}, {'word': 'File', 'menu': 'Zip', 'kind': 'c', 'abbr': 'File <class>'}, {'word': 'FileContents', 'menu': '', 'kind': 'c', 'abbr': 'FileContents <class>'}, {'word': 'Finder', 'menu': '', 'kind': 'c', 'abbr': 'Finder <class>'}, {'word': 'FirstController', 'menu': '', 'kind': 'c', 'abbr': 'FirstController < ApplicationController <class>'}, {'word': 'FirstControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'FirstControllerTest < ActionController::TestCase <class>'}, {'word': 'FirstHelper', 'menu': '', 'kind': 'm', 'abbr': 'module FirstHelper'}, {'word': 'Fish', 'menu': '', 'kind': 'c', 'abbr': 'Fish <class>'}, {'word': 'Fontforge', 'menu': '', 'kind': 'c', 'abbr': 'Fontforge < Formula <class>'}, {'word': 'FourthController', 'menu': '', 'kind': 'c', 'abbr': 'FourthController < ApplicationController <class>'}, {'word': 'FourthControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'FourthControllerTest < ActionController::TestCase <class>'}, {'word': 'FourthHelper', 'menu': '', 'kind': 'm', 'abbr': 'module FourthHelper'}, {'word': 'Function', 'menu': '', 'kind': 'c', 'abbr': 'Function <class>'}, {'word': 'FunctionTest', 'menu': '', 'kind': 'c', 'abbr': 'FunctionTest < ActiveSupport::TestCase <class>'}, {'word': 'GameOfLife', 'menu': '', 'kind': 'c', 'abbr': 'GameOfLife <class>'}, {'word': 'GameOfLifeConsole', 'menu': '', 'kind': 'c', 'abbr': 'GameOfLifeConsole < GameOfLife <class>'}, {'word': 'Game_of_life', 'menu': '', 'kind': 'c', 'abbr': 'Game_of_life <class>'}, {'word': 'GemFiler', 'menu': '', 'kind': 'm', 'abbr': 'module GemFiler'}, {'word': 'Gemfiler', 'menu': '', 'kind': 'm', 'abbr': 'module Gemfiler'}, {'word': 'Grep', 'menu': '', 'kind': 'm', 'abbr': 'module Grep'}, {'word': 'GrepBackend', 'menu': '', 'kind': 'c', 'abbr': 'GrepBackend <class>'}, {'word': 'HomeController', 'menu': '', 'kind': 'c', 'abbr': 'HomeController < ApplicationController <class>'}, {'word': 'HomeControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'HomeControllerTest < ActionController::TestCase <class>'}, {'word': 'HomeHelper', 'menu': '', 'kind': 'm', 'abbr': 'module HomeHelper'}, {'word': 'Image', 'menu': '', 'kind': 'c', 'abbr': 'Image <class>'}, {'word': 'Interface', 'menu': '', 'kind': 'c', 'abbr': 'Interface <class>'}, {'word': 'LectorsProber', 'menu': '', 'kind': 'm', 'abbr': 'module LectorsProber'}, {'word': 'Life', 'menu': '', 'kind': 'c', 'abbr': 'Life <class>'}, {'word': 'MatchError', 'menu': 'Gemfiler', 'kind': 'c', 'abbr': 'MatchError < StandardError; end <class>'}, {'word': 'Matcher', 'menu': 'RubyGrep', 'kind': 'c', 'abbr': 'Matcher <class>'}, {'word': 'MyDownloadStrategy', 'menu': '', 'kind': 'c', 'abbr': 'MyDownloadStrategy < GitDownloadStrategy <class>'}, {'word': 'MyGrep', 'menu': '', 'kind': 'c', 'abbr': 'MyGrep <class>'}, {'word': 'NameValidator', 'menu': 'Validators', 'kind': 'c', 'abbr': 'NameValidator <class>'}, {'word': 'OptionParser', 'menu': 'Parsers', 'kind': 'c', 'abbr': 'OptionParser <class>'}, {'word': 'Options', 'menu': '', 'kind': 'c', 'abbr': 'Options <class>'}, {'word': 'ParseParam', 'menu': '', 'kind': 'c', 'abbr': 'ParseParam <class>'}, {'word': 'Parser', 'menu': 'LectorsProber', 'kind': 'c', 'abbr': 'Parser <class>'}, {'word': 'ParserArgv', 'menu': 'LectorsProber', 'kind': 'c', 'abbr': 'ParserArgv <class>'}, {'word': 'ParserSite', 'menu': 'LectorsProber', 'kind': 'c', 'abbr': 'ParserSite <class>'}, {'word': 'Parsers', 'menu': '', 'kind': 'm', 'abbr': 'module Parsers'}, {'word': 'Picture', 'menu': '', 'kind': 'c', 'abbr': 'Picture <class>'}, {'word': 'Ping', 'menu': '', 'kind': 'c', 'abbr': 'Ping <class>'}, {'word': 'Prober', 'menu': 'LectorsProber', 'kind': 'c', 'abbr': 'Prober <class>'}, {'word': 'Product', 'menu': '', 'kind': 'c', 'abbr': 'Product < ActiveRecord::Base <class>'}, {'word': 'ProductTest', 'menu': '', 'kind': 'c', 'abbr': 'ProductTest < ActiveSupport::TestCase <class>'}, {'word': 'ProductsController', 'menu': '', 'kind': 'c', 'abbr': 'ProductsController < ApplicationController <class>'}, {'word': 'ProductsControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'ProductsControllerTest < ActionController::TestCase <class>'}, {'word': 'ProductsHelper', 'menu': '', 'kind': 'm', 'abbr': 'module ProductsHelper'}, {'word': 'Question', 'menu': '', 'kind': 'c', 'abbr': 'Question < ActiveRecord::Base <class>'}, {'word': 'QuestionTest', 'menu': '', 'kind': 'c', 'abbr': 'QuestionTest < ActiveSupport::TestCase <class>'}, {'word': 'Questions', 'menu': '', 'kind': 'm', 'abbr': 'module Questions'}, {'word': 'QuestionsController', 'menu': '', 'kind': 'c', 'abbr': 'QuestionsController < ApplicationController <class>'}, {'word': 'QuestionsControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'QuestionsControllerTest < ActionController::TestCase <class>'}, {'word': 'QuestionsHelper', 'menu': '', 'kind': 'm', 'abbr': 'module QuestionsHelper'}, {'word': 'Quiz', 'menu': '', 'kind': 'c', 'abbr': 'Quiz <class>'}, {'word': 'RegexMatcher', 'menu': 'RubyGrep', 'kind': 'c', 'abbr': 'RegexMatcher < Matcher <class>'}, {'word': 'Rocket', 'menu': '', 'kind': 'c', 'abbr': 'Rocket <class>'}, {'word': 'RubyGrep', 'menu': '', 'kind': 'm', 'abbr': 'module RubyGrep; end'}, {'word': 'Scroller', 'menu': '', 'kind': 'c', 'abbr': 'Scroller <class>'}, {'word': 'Searcher', 'menu': 'Grep', 'kind': 'c', 'abbr': 'Searcher <class>'}, {'word': 'SecondController', 'menu': '', 'kind': 'c', 'abbr': 'SecondController < ApplicationController <class>'}, {'word': 'SecondControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'SecondControllerTest < ActionController::TestCase <class>'}, {'word': 'SecondHelper', 'menu': '', 'kind': 'm', 'abbr': 'module SecondHelper'}, {'word': 'SeventhController', 'menu': '', 'kind': 'c', 'abbr': 'SeventhController < ApplicationController <class>'}, {'word': 'SeventhControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'SeventhControllerTest < ActionController::TestCase <class>'}, {'word': 'SeventhHelper', 'menu': '', 'kind': 'm', 'abbr': 'module SeventhHelper'}, {'word': 'Signs', 'menu': '', 'kind': 'c', 'abbr': 'Signs <class>'}, {'word': 'Sijka', 'menu': '', 'kind': 'c', 'abbr': 'Sijka <class>'}, {'word': 'SixthController', 'menu': '', 'kind': 'c', 'abbr': 'SixthController < ApplicationController <class>'}, {'word': 'SixthControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'SixthControllerTest < ActionController::TestCase <class>'}, {'word': 'SixthHelper', 'menu': '', 'kind': 'm', 'abbr': 'module SixthHelper'}, {'word': 'Stage0Step0', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage0Step0'}, {'word': 'Stage0Step1', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage0Step1'}, {'word': 'Stage0Step2', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage0Step2'}, {'word': 'Stage0Step3', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage0Step3'}, {'word': 'Stage0Step4', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage0Step4'}, {'word': 'Stage1Step0', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage1Step0'}, {'word': 'Stage1Step1', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage1Step1'}, {'word': 'Stage1Step2', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage1Step2'}, {'word': 'Stage1Step3', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage1Step3'}, {'word': 'Stage2Step0', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step0'}, {'word': 'Stage2Step1', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step1'}, {'word': 'Stage2Step10', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step10'}, {'word': 'Stage2Step11', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step11'}, {'word': 'Stage2Step12', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step12'}, {'word': 'Stage2Step13', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step13'}, {'word': 'Stage2Step14', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step14'}, {'word': 'Stage2Step15', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step15'}, {'word': 'Stage2Step16', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step16'}, {'word': 'Stage2Step17', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step17'}, {'word': 'Stage2Step18', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step18'}, {'word': 'Stage2Step19', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step19'}, {'word': 'Stage2Step2', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step2'}, {'word': 'Stage2Step20', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step20'}, {'word': 'Stage2Step21', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step21'}, {'word': 'Stage2Step22', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step22'}, {'word': 'Stage2Step23', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step23'}, {'word': 'Stage2Step3', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step3'}, {'word': 'Stage2Step4', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step4'}, {'word': 'Stage2Step5', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step5'}, {'word': 'Stage2Step6', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step6'}, {'word': 'Stage2Step7', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step7'}, {'word': 'Stage2Step8', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step8'}, {'word': 'Stage2Step9', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage2Step9'}, {'word': 'Stage3Step0', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage3Step0'}, {'word': 'Stage4Step0', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step0'}, {'word': 'Stage4Step1', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step1'}, {'word': 'Stage4Step2', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step2'}, {'word': 'Stage4Step3', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step3'}, {'word': 'Stage4Step4', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step4'}, {'word': 'Stage4Step5', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step5'}, {'word': 'Stage4Step6', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step6'}, {'word': 'Stage4Step7', 'menu': 'Animation', 'kind': 'f', 'abbr': 'Stage4Step7'}, {'word': 'String', 'menu': '', 'kind': 'c', 'abbr': 'String <class>'}, {'word': 'TRPO', 'menu': '', 'kind': 'm', 'abbr': 'module TRPO'}, {'word': 'TextMatcher', 'menu': 'RubyGrep', 'kind': 'c', 'abbr': 'TextMatcher < Matcher <class>'}, {'word': 'ThirdController', 'menu': '', 'kind': 'c', 'abbr': 'ThirdController < ApplicationController <class>'}, {'word': 'ThirdControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'ThirdControllerTest < ActionController::TestCase <class>'}, {'word': 'ThirdHelper', 'menu': '', 'kind': 'm', 'abbr': 'module ThirdHelper'}, {'word': 'TonalityMessages', 'menu': 'LectorsProber', 'kind': 'c', 'abbr': 'TonalityMessages <class>'}, {'word': 'Unzipper', 'menu': '', 'kind': 'c', 'abbr': 'Unzipper <class>'}, {'word': 'Validators', 'menu': '', 'kind': 'm', 'abbr': 'module Validators'}, {'word': 'VersionFetcher', 'menu': '', 'kind': 'c', 'abbr': 'VersionFetcher <class>'}, {'word': 'VersionFilter', 'menu': '', 'kind': 'c', 'abbr': 'VersionFilter <class>'}, {'word': 'VersionMatcher', 'menu': '', 'kind': 'c', 'abbr': 'VersionMatcher <class>'}, {'word': 'VersionParser', 'menu': 'Parsers', 'kind': 'c', 'abbr': 'VersionParser <class>'}, {'word': 'VersionPrinter', 'menu': '', 'kind': 'c', 'abbr': 'VersionPrinter <class>'}, {'word': 'VersionValidator', 'menu': 'Validators', 'kind': 'c', 'abbr': 'VersionValidator <class>'}, {'word': 'Versions', 'menu': 'Gemfiler', 'kind': 'c', 'abbr': 'Versions <class>'}, {'word': 'Visualiser', 'menu': '', 'kind': 'c', 'abbr': 'Visualiser <class>'}, {'word': 'Vizualizer', 'menu': '', 'kind': 'c', 'abbr': 'Vizualizer <class>'}, {'word': 'WelcomeController', 'menu': '', 'kind': 'c', 'abbr': 'WelcomeController < ApplicationController <class>'}, {'word': 'WelcomeControllerTest', 'menu': '', 'kind': 'c', 'abbr': 'WelcomeControllerTest < ActionController::TestCase <class>'}, {'word': 'WelcomeHelper', 'menu': '', 'kind': 'm', 'abbr': 'module WelcomeHelper'}, {'word': 'alive_cell', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def alive_cell(i, j, live_neighbors)'}, {'word': 'alive_neighbours', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def alive_neighbours(y, x)'}, {'word': 'analise_of_life', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def analise_of_life(i, j)'}, {'word': 'analize_scope', 'menu': 'Grep.Searcher', 'kind': 'f', 'abbr': 'def analize_scope(content, index)'}, {'word': 'analysis_tonality', 'menu': 'LectorsProber.Prober', 'kind': 'f', 'abbr': 'def analysis_tonality(comment)'}, {'word': 'anim_arr', 'menu': 'Animation', 'kind': 'f', 'abbr': 'def anim_arr'}, {'word': 'anim_arr=', 'menu': 'Animation', 'kind': 'f', 'abbr': 'def anim_arr=(arr)'}, {'word': 'animate', 'menu': 'Animator', 'kind': 'f', 'abbr': 'def animate'}, {'word': 'animate_gif', 'menu': '', 'kind': 'f', 'abbr': 'def animate_gif(gif_filename)'}, {'word': 'answer', 'menu': 'Quiz', 'kind': 'f', 'abbr': 'def answer(params)'}, {'word': 'appear', 'menu': '', 'kind': 'F', 'abbr': 'def mosquito.appear'}, {'word': 'article_params', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def article_params'}, {'word': 'boom', 'menu': 'Rocket', 'kind': 'f', 'abbr': 'def boom # Variables for ending explosion'}, {'word': 'build_parser', 'menu': 'RubyGrep', 'kind': 'f', 'abbr': 'def build_parser'}, {'word': 'call', 'menu': 'Quiz', 'kind': 'f', 'abbr': 'def call(env)'}, {'word': 'cell_is', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def cell_is(i, j)'}, {'word': 'cell_is_alive?', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def cell_is_alive?(i, j)'}, {'word': 'change', 'menu': 'CreateArticles', 'kind': 'f', 'abbr': 'def change'}, {'word': 'clear_screen', 'menu': '', 'kind': 'f', 'abbr': 'def clear_screen '}, {'word': 'client_params', 'menu': 'ClientsController', 'kind': 'f', 'abbr': 'def client_params'}, {'word': 'clone', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def clone'}, {'word': 'clone_2d_array', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'clone_2d_array'}, {'word': 'close', 'menu': 'Life.UI', 'kind': 'f', 'abbr': 'def close'}, {'word': 'colorization', 'menu': '', 'kind': 'f', 'abbr': 'def colorization(input_text, indicator)'}, {'word': 'colorize', 'menu': 'String', 'kind': 'f', 'abbr': 'colorize'}, {'word': 'cols', 'menu': '', 'kind': 'f', 'abbr': 'def cols'}, {'word': 'comment_params', 'menu': 'CommentsController', 'kind': 'f', 'abbr': 'def comment_params'}, {'word': 'compare', 'menu': 'Condition', 'kind': 'f', 'abbr': 'def compare(another_version)'}, {'word': 'conditions', 'menu': 'FourthController', 'kind': 'f', 'abbr': 'def conditions'}, {'word': 'convert_frame_to_ascii', 'menu': '', 'kind': 'f', 'abbr': 'def convert_frame_to_ascii(frames_count)'}, {'word': 'count_length', 'menu': 'Image', 'kind': 'f', 'abbr': 'def count_length'}, {'word': 'count_neighbors', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def count_neighbors(x, y)'}, {'word': 'create', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def create'}, {'word': 'create_clear_matrix', 'menu': 'Life', 'kind': 'f', 'abbr': 'def create_clear_matrix(height, weight)'}, {'word': 'create_frames', 'menu': '', 'kind': 'f', 'abbr': 'def create_frames(gif_filename)'}, {'word': 'decorate', 'menu': 'Scroller', 'kind': 'f', 'abbr': 'def decorate(line)'}, {'word': 'destroy', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def destroy'}, {'word': 'disappear', 'menu': '', 'kind': 'F', 'abbr': 'def mosquito.disappear'}, {'word': 'display', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def display'}, {'word': 'do_iteration', 'menu': 'Life', 'kind': 'f', 'abbr': 'def do_iteration'}, {'word': 'draw', 'menu': 'Image', 'kind': 'f', 'abbr': 'def draw'}, {'word': 'draw_cartridge', 'menu': 'Animator', 'kind': 'f', 'abbr': 'def draw_cartridge(coordx, coordy)'}, {'word': 'draw_frame', 'menu': 'Animator', 'kind': 'f', 'abbr': 'def draw_frame(coordx_of_gun, coordy_of_gun,'}, {'word': 'draw_gun', 'menu': 'Animator', 'kind': 'f', 'abbr': 'def draw_gun(coordx, coordy)'}, {'word': 'draw_horse', 'menu': '', 'kind': 'f', 'abbr': 'def draw_horse(num_img)'}, {'word': 'draw_image', 'menu': '', 'kind': 'f', 'abbr': 'def draw_image(number_image)'}, {'word': 'each', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def each'}, {'word': 'each_file', 'menu': 'RubyGrep', 'kind': 'f', 'abbr': 'def each_file'}, {'word': 'each_line', 'menu': 'Zip.File', 'kind': 'f', 'abbr': 'def each_line'}, {'word': 'each_neighbor', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def each_neighbor(x, y)'}, {'word': 'each_with_flag', 'menu': 'Gemfiler', 'kind': 'f', 'abbr': 'def each_with_flag'}, {'word': 'edit', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def edit'}, {'word': 'edit_entity', 'menu': '', 'kind': 'f', 'abbr': 'def edit_entity'}, {'word': 'entries_count', 'menu': 'LectorsProber.TonalityMessages', 'kind': 'f', 'abbr': 'def entries_count(comment, matchers)'}, {'word': 'execute', 'menu': 'Gemfiler', 'kind': 'f', 'abbr': 'def execute'}, {'word': 'expand_files', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def expand_files(options, files)'}, {'word': 'expand_options', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def expand_options(options)'}, {'word': 'expand_pattern', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def expand_pattern(options, pattern)'}, {'word': 'fact', 'menu': '', 'kind': 'f', 'abbr': 'def fact(n)'}, {'word': 'fail', 'menu': 'RubyGrep', 'kind': 'f', 'abbr': 'def fail(message)'}, {'word': 'fail!', 'menu': 'Gemfiler', 'kind': 'f', 'abbr': 'def fail!(message)'}, {'word': 'fetch', 'menu': 'VersionFetcher', 'kind': 'f', 'abbr': 'def fetch'}, {'word': 'fetch_from_rubygems', 'menu': 'Gemfiler', 'kind': 'f', 'abbr': 'def fetch_from_rubygems'}, {'word': 'fetch_versions', 'menu': 'Gemfiler.Versions', 'kind': 'f', 'abbr': 'def fetch_versions'}, {'word': 'filter', 'menu': 'VersionFilter', 'kind': 'f', 'abbr': 'def filter(specifier)'}, {'word': 'find', 'menu': 'Finder', 'kind': 'f', 'abbr': 'def find(pattern)'}, {'word': 'find_comments', 'menu': 'LectorsProber.Prober', 'kind': 'f', 'abbr': 'def find_comments(lector_link)'}, {'word': 'find_lectors', 'menu': 'LectorsProber.Prober', 'kind': 'f', 'abbr': 'def find_lectors'}, {'word': 'find_lectors_info', 'menu': 'LectorsProber.Prober', 'kind': 'f', 'abbr': 'def find_lectors_info(lectors)'}, {'word': 'find_max', 'menu': 'Function', 'kind': 'f', 'abbr': 'def find_max'}, {'word': 'find_min', 'menu': 'Function', 'kind': 'f', 'abbr': 'def find_min'}, {'word': 'find_poems', 'menu': 'Parser', 'kind': 'f', 'abbr': 'def find_poems'}, {'word': 'find_using_regexp', 'menu': 'Finder', 'kind': 'f', 'abbr': 'def find_using_regexp(pattern)'}, {'word': 'find_with_amount', 'menu': 'Finder', 'kind': 'f', 'abbr': 'def find_with_amount(pattern)'}, {'word': 'first', 'menu': 'Quiz', 'kind': 'f', 'abbr': 'def first(key)'}, {'word': 'first_condition', 'menu': '', 'kind': 'f', 'abbr': 'def first_condition(n)'}, {'word': 'from_array', 'menu': 'Life.Board', 'kind': 'F', 'abbr': 'def self.from_array(cells)'}, {'word': 'from_text', 'menu': 'Life.Board', 'kind': 'F', 'abbr': 'def self.from_text(text)'}, {'word': 'gen_message', 'menu': 'Function', 'kind': 'f', 'abbr': 'def gen_message(result)'}, {'word': 'get_count_of_alive', 'menu': 'Life', 'kind': 'f', 'abbr': 'def get_count_of_alive(i,j)'}, {'word': 'get_elem', 'menu': 'Life', 'kind': 'f', 'abbr': 'def get_elem(i, j)'}, {'word': 'get_found_exact_name', 'menu': 'Diggers.AwesomeDigger', 'kind': 'F', 'abbr': 'def self.get_found_exact_name(name)'}, {'word': 'get_gem_page', 'menu': 'Diggers.AwesomeDigger', 'kind': 'F', 'abbr': 'def self.get_gem_page(name)'}, {'word': 'get_live_neighbors', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def get_live_neighbors(indexes)'}, {'word': 'get_next_version', 'menu': 'VersionFilter', 'kind': 'f', 'abbr': 'def get_next_version'}, {'word': 'get_search_page', 'menu': 'Diggers.AwesomeDigger', 'kind': 'F', 'abbr': 'def self.get_search_page(name)'}, {'word': 'get_version_array', 'menu': 'VersionFetcher', 'kind': 'F', 'abbr': 'def self.get_version_array(gemname)'}, {'word': 'get_version_position', 'menu': 'VersionFilter', 'kind': 'f', 'abbr': 'def get_version_position(version, mas)'}, {'word': 'get_versions', 'menu': 'GemFiler', 'kind': 'f', 'abbr': 'def get_versions(gem_name)'}, {'word': 'grab_lectors_info', 'menu': 'LectorsProber.ParserSite', 'kind': 'f', 'abbr': 'def grab_lectors_info'}, {'word': 'grep', 'menu': '', 'kind': 'f', 'abbr': 'def grep(option = '''', str = '''', *file)'}, {'word': 'grub_comments', 'menu': 'LectorsProber.ParserSite', 'kind': 'f', 'abbr': 'def grub_comments(lector_link)'}, {'word': 'height', 'menu': 'Image', 'kind': 'f', 'abbr': 'def height'}, {'word': 'help', 'menu': 'RubyGrep', 'kind': 'f', 'abbr': 'def help'}, {'word': 'identify_tone', 'menu': 'LectorsProber.TonalityMessages', 'kind': 'f', 'abbr': 'def identify_tone(comment, result)'}, {'word': 'in_bounds?', 'menu': 'AsciiPicture', 'kind': 'f', 'abbr': 'def in_bounds?(window, y, x)'}, {'word': 'index', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def index'}, {'word': 'initialize', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def initialize'}, {'word': 'initizlize', 'menu': 'Interface', 'kind': 'f', 'abbr': 'def initizlize'}, {'word': 'insert_spaces', 'menu': '', 'kind': 'f', 'abbr': 'def insert_spaces'}, {'word': 'install', 'menu': 'Fontforge', 'kind': 'f', 'abbr': 'def install'}, {'word': 'intergal_params', 'menu': 'SixthController', 'kind': 'f', 'abbr': 'def intergal_params'}, {'word': 'intro', 'menu': 'Animation', 'kind': 'f', 'abbr': 'def intro'}, {'word': 'left_move', 'menu': 'Sijka', 'kind': 'f', 'abbr': 'def left_move'}, {'word': 'line_matches?', 'menu': 'RubyGrep.RegexMatcher', 'kind': 'f', 'abbr': 'def line_matches?(line)'}, {'word': 'load_board', 'menu': 'Life.UI', 'kind': 'F', 'abbr': 'def self.load_board(relative_path)'}, {'word': 'loop_print', 'menu': 'GameOfLifeConsole', 'kind': 'f', 'abbr': 'def loop_print (sleep_time)'}, {'word': 'match_versions', 'menu': 'VersionMatcher', 'kind': 'F', 'abbr': 'def self.match_versions(versions, conditions)'}, {'word': 'max_size_engine', 'menu': '', 'kind': 'f', 'abbr': 'def max_size_engine'}, {'word': 'mini_compare', 'menu': 'Condition', 'kind': 'f', 'abbr': 'mini_compare'}, {'word': 'move', 'menu': 'Image', 'kind': 'f', 'abbr': 'def move'}, {'word': 'my_clear', 'menu': '', 'kind': 'f', 'abbr': 'def my_clear'}, {'word': 'n_spase', 'menu': '', 'kind': 'f', 'abbr': 'def n_spase(n)'}, {'word': 'neighbors', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def neighbors (x, y)'}, {'word': 'new_elem', 'menu': 'Life', 'kind': 'f', 'abbr': 'def new_elem(i, j, temp_matrix)'}, {'word': 'next_frame', 'menu': '', 'kind': 'f', 'abbr': 'def next_frame'}, {'word': 'next_generation', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def next_generation'}, {'word': 'next_state', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def next_state'}, {'word': 'open_file', 'menu': 'Grep.Searcher', 'kind': 'f', 'abbr': 'def open_file(fname)'}, {'word': 'opt_parse', 'menu': 'Grep.Args', 'kind': 'f', 'abbr': 'def opt_parse'}, {'word': 'output', 'menu': 'Vizualizer', 'kind': 'f', 'abbr': 'def output'}, {'word': 'paint', 'menu': 'Animation', 'kind': 'f', 'abbr': 'paint'}, {'word': 'parse', 'menu': 'Gemfiler.Args', 'kind': 'f', 'abbr': 'def parse'}, {'word': 'parse!', 'menu': 'RubyGrep', 'kind': 'f', 'abbr': 'def parse!'}, {'word': 'parse_args', 'menu': 'Args', 'kind': 'f', 'abbr': 'def parse_args'}, {'word': 'parse_arguments', 'menu': 'Gemfiler', 'kind': 'f', 'abbr': 'def parse_arguments'}, {'word': 'parse_argv', 'menu': 'Grep.Args', 'kind': 'f', 'abbr': 'def parse_argv'}, {'word': 'parse_array', 'menu': 'MyGrep.parse_options', 'kind': 'f', 'abbr': 'def parse_array(string_array)'}, {'word': 'parse_option', 'menu': 'Parsers.OptionParser', 'kind': 'F', 'abbr': 'def self.parse_option(option)'}, {'word': 'parse_options', 'menu': 'Interface', 'kind': 'f', 'abbr': 'def parse_options'}, {'word': 'parse_version', 'menu': 'Parsers.VersionParser', 'kind': 'F', 'abbr': 'def self.parse_version(version)'}, {'word': 'parse_versions', 'menu': 'Parsers.VersionParser', 'kind': 'F', 'abbr': 'def self.parse_versions(versions)'}, {'word': 'ping_line', 'menu': 'Ping', 'kind': 'f', 'abbr': 'def ping_line'}, {'word': 'play', 'menu': 'Scroller', 'kind': 'f', 'abbr': 'def play'}, {'word': 'post_install', 'menu': '', 'kind': 'f', 'abbr': 'def post_install'}, {'word': 'print', 'menu': 'Car', 'kind': 'f', 'abbr': 'def print(y, x)'}, {'word': 'print_all_version', 'menu': 'VersionPrinter', 'kind': 'F', 'abbr': 'def self.print_all_version(versions)'}, {'word': 'print_matches', 'menu': 'GemFiler', 'kind': 'f', 'abbr': 'def print_matches(versions, matches)'}, {'word': 'print_matrix', 'menu': 'Fish', 'kind': 'f', 'abbr': 'def print_matrix(row, column)'}, {'word': 'print_only_matched', 'menu': 'VersionPrinter', 'kind': 'F', 'abbr': 'def self.print_only_matched(versions)'}, {'word': 'print_sign', 'menu': 'Signs', 'kind': 'f', 'abbr': 'def print_sign'}, {'word': 'process', 'menu': 'Interface.parse_options', 'kind': 'f', 'abbr': 'def process'}, {'word': 'product_params', 'menu': 'ProductsController', 'kind': 'f', 'abbr': 'def product_params'}, {'word': 'products_params', 'menu': 'SeventhController', 'kind': 'f', 'abbr': 'def products_params'}, {'word': 'question_params', 'menu': 'QuestionsController', 'kind': 'f', 'abbr': 'def question_params'}, {'word': 'random_init', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def random_init'}, {'word': 'randomize', 'menu': 'Game_of_life', 'kind': 'f', 'abbr': 'def randomize'}, {'word': 'readFile', 'menu': '', 'kind': 'f', 'abbr': 'def readFile(nameOfFile)'}, {'word': 'read_till_newline', 'menu': 'Zip.File', 'kind': 'f', 'abbr': 'def read_till_newline'}, {'word': 'render', 'menu': 'AsciiPicture', 'kind': 'f', 'abbr': 'def render(window)'}, {'word': 'render_frames', 'menu': '', 'kind': 'f', 'abbr': 'def render_frames(frames_in_ascii, frames_count)'}, {'word': 'render_line', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'render_line'}, {'word': 'reset', 'menu': '', 'kind': 'f', 'abbr': 'def reset'}, {'word': 'reset_args', 'menu': 'MyDownloadStrategy', 'kind': 'f', 'abbr': 'def reset_args'}, {'word': 'result', 'menu': 'Function', 'kind': 'f', 'abbr': 'def result'}, {'word': 'results', 'menu': 'FirstController', 'kind': 'f', 'abbr': 'def results'}, {'word': 'reverse_img', 'menu': 'Sijka', 'kind': 'f', 'abbr': 'def reverse_img'}, {'word': 'right_move', 'menu': 'Sijka', 'kind': 'f', 'abbr': 'def right_move'}, {'word': 'rocket', 'menu': 'Rocket', 'kind': 'f', 'abbr': 'def rocket(a, b) # Making a rocket'}, {'word': 'rules', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def rules (x, y)'}, {'word': 'search', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def search(options, pattern, files)'}, {'word': 'search_file', 'menu': 'RubyGrep.Matcher', 'kind': 'f', 'abbr': 'def search_file(file)'}, {'word': 'search_in_archive', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def search_in_archive(filename)'}, {'word': 'search_in_file', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def search_in_file(filename)'}, {'word': 'search_in_lines', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def search_in_lines(lines, filename)'}, {'word': 'search_in_lines_no_context', 'menu': 'GrepBackend', 'kind': 'f', 'abbr': 'def search_in_lines_no_context(lines, filename)'}, {'word': 'search_pattern', 'menu': 'Grep.Searcher', 'kind': 'f', 'abbr': 'def search_pattern'}, {'word': 'search_task', 'menu': 'RubyGrep.Matcher', 'kind': 'f', 'abbr': 'def search_task(task)'}, {'word': 'second_condition', 'menu': '', 'kind': 'f', 'abbr': 'def second_condition(n)'}, {'word': 'set_matrix', 'menu': 'Fish', 'kind': 'f', 'abbr': 'def set_matrix(row)'}, {'word': 'set_question', 'menu': 'QuestionsController', 'kind': 'f', 'abbr': 'def set_question'}, {'word': 'show', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def show'}, {'word': 'show_anim', 'menu': 'Animation', 'kind': 'f', 'abbr': 'def show_anim'}, {'word': 'sleep_and_clear', 'menu': '', 'kind': 'f', 'abbr': 'def sleep_and_clear'}, {'word': 'step', 'menu': 'GameOfLife', 'kind': 'f', 'abbr': 'def step'}, {'word': 'sub_with_star', 'menu': '', 'kind': 'f', 'abbr': 'def sub_with_star'}, {'word': 'sub_with_zero', 'menu': '', 'kind': 'f', 'abbr': 'def sub_with_zero'}, {'word': 'suitable?', 'menu': 'Condition', 'kind': 'f', 'abbr': 'def suitable?(another_version)'}, {'word': 'symbol_color', 'menu': '', 'kind': 'f', 'abbr': 'def symbol_color(string_file)'}, {'word': 'tick', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def tick'}, {'word': 'to_a', 'menu': 'Gemfiler.Versions', 'kind': 'f', 'abbr': 'def to_a'}, {'word': 'to_s', 'menu': 'Gemfiler.Versions', 'kind': 'f', 'abbr': 'def to_s'}, {'word': 'trucs', 'menu': '', 'kind': 'f', 'abbr': 'def trucs(n)'}, {'word': 'unzip', 'menu': 'Unzipper', 'kind': 'F', 'abbr': 'def self.unzip(file)'}, {'word': 'unzname_file', 'menu': 'Grep.Searcher', 'kind': 'f', 'abbr': 'def unzname_file(zname)'}, {'word': 'update', 'menu': 'ArticlesController', 'kind': 'f', 'abbr': 'def update'}, {'word': 'update_from_array', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def update_from_array(cells)'}, {'word': 'validate_coditions', 'menu': 'Grep.Args.opt_parse', 'kind': 'f', 'abbr': 'def validate_coditions'}, {'word': 'validate_condition!', 'menu': 'Gemfiler.Args', 'kind': 'f', 'abbr': 'def validate_condition!(sign, ver)'}, {'word': 'validate_gem_name', 'menu': 'Gemfiler.Args', 'kind': 'f', 'abbr': 'def validate_gem_name(gem_name)'}, {'word': 'validate_name', 'menu': 'Validators.NameValidator', 'kind': 'F', 'abbr': 'def self.validate_name(name, found_exact_name)'}, {'word': 'validate_parsed_version', 'menu': 'Validators.VersionValidator', 'kind': 'F', 'abbr': 'def self.validate_parsed_version(version_in_number, parsed_options)'}, {'word': 'validate_versions', 'menu': 'Validators.VersionValidator', 'kind': 'F', 'abbr': 'def self.validate_versions(versions_in_numbers, parsed_options)'}, {'word': 'verification_pattern', 'menu': 'Grep.Searcher', 'kind': 'f', 'abbr': 'def verification_pattern(content, fname, pattern = @conditions[:pattern])'}, {'word': 'version_matches?', 'menu': 'Gemfiler', 'kind': 'f', 'abbr': 'def version_matches?(version)'}, {'word': 'visualise', 'menu': 'Visualiser', 'kind': 'f', 'abbr': 'def visualise(filter)'}, {'word': 'visualize', 'menu': 'Vizualizer', 'kind': 'f', 'abbr': 'def visualize'}, {'word': 'wait_n_clear', 'menu': 'Ping', 'kind': 'f', 'abbr': 'def wait_n_clear(a) # Lambda would be better, but i don''t now what is Lambda.'}, {'word': 'width', 'menu': 'Image', 'kind': 'f', 'abbr': 'def width'}, {'word': 'wrapped_coords', 'menu': 'Life.Board', 'kind': 'f', 'abbr': 'def wrapped_coords(x, y)'}]
